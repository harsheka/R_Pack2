// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_binseg
Rcpp::List rcpp_binseg(const Rcpp::NumericVector data_vec, const int kmax);
RcppExport SEXP _Rpack2_rcpp_binseg(SEXP data_vecSEXP, SEXP kmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type data_vec(data_vecSEXP);
    Rcpp::traits::input_parameter< const int >::type kmax(kmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_binseg(data_vec, kmax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rpack2_rcpp_binseg", (DL_FUNC) &_Rpack2_rcpp_binseg, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rpack2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
